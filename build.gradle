buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
        google()
    }
    dependencies {}
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '0.0.1'
    ext {
        lwjglVersion = "3.2.3"
        jomlVersion = "1.9.20"

        switch (org.gradle.internal.os.OperatingSystem.current()) {
            case org.gradle.internal.os.OperatingSystem.LINUX:
                def osArch = System.getProperty("os.arch")
                lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
                        ? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
                        : "natives-linux"
                break
            case org.gradle.internal.os.OperatingSystem.MAC_OS:
                lwjglNatives = "natives-macos"
                break
            case org.gradle.internal.os.OperatingSystem.WINDOWS:
                lwjglNatives = System.getProperty("os.arch").contains("64") ? "natives-windows" : "natives-windows-x86"
                break
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }

}

project(":core") {
    apply plugin: "java"

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.12'

        implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
        implementation "org.lwjgl:lwjgl"
        implementation "org.lwjgl:lwjgl-assimp"
        implementation "org.lwjgl:lwjgl-bgfx"
        implementation "org.lwjgl:lwjgl-cuda"
        implementation "org.lwjgl:lwjgl-glfw"
        implementation "org.lwjgl:lwjgl-nanovg"
        implementation "org.lwjgl:lwjgl-nuklear"
        implementation "org.lwjgl:lwjgl-openal"
        implementation "org.lwjgl:lwjgl-opengl"
        implementation "org.lwjgl:lwjgl-par"
        implementation "org.lwjgl:lwjgl-stb"
        implementation "org.lwjgl:lwjgl-vulkan"
        runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-bgfx::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-nanovg::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-nuklear::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-par::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
        if (lwjglNatives == "natives-macos") runtimeOnly "org.lwjgl:lwjgl-vulkan::$lwjglNatives"
        implementation "org.joml:joml:${jomlVersion}"

        compile group: 'org.l33tlabs.twl', name: 'pngdecoder', version: '1.0'
        compile group: 'com.esotericsoftware', name: 'kryonet', version: '2.22.0-RC1'
    }

}

project(":engine") {
    apply plugin: "java"
    apply plugin: "application"

    applicationDefaultJvmArgs = ["-XstartOnFirstThread"]

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.12'

        compile project(":core")

        implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
        implementation "org.lwjgl:lwjgl"
        implementation "org.lwjgl:lwjgl-assimp"
        implementation "org.lwjgl:lwjgl-bgfx"
        implementation "org.lwjgl:lwjgl-cuda"
        implementation "org.lwjgl:lwjgl-glfw"
        implementation "org.lwjgl:lwjgl-nanovg"
        implementation "org.lwjgl:lwjgl-nuklear"
        implementation "org.lwjgl:lwjgl-openal"
        implementation "org.lwjgl:lwjgl-opengl"
        implementation "org.lwjgl:lwjgl-par"
        implementation "org.lwjgl:lwjgl-stb"
        implementation "org.lwjgl:lwjgl-vulkan"
        runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-bgfx::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-nanovg::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-nuklear::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-par::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
        if (lwjglNatives == "natives-macos") runtimeOnly "org.lwjgl:lwjgl-vulkan::$lwjglNatives"

        implementation "org.joml:joml:${jomlVersion}"
    }

}

project(":editor") {
    apply plugin: "java"

    dependencies {
        compile project(":core")

        implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
        implementation "org.lwjgl:lwjgl"
        implementation "org.lwjgl:lwjgl-assimp"
        implementation "org.lwjgl:lwjgl-bgfx"
        implementation "org.lwjgl:lwjgl-cuda"
        implementation "org.lwjgl:lwjgl-glfw"
        implementation "org.lwjgl:lwjgl-nanovg"
        implementation "org.lwjgl:lwjgl-nuklear"
        implementation "org.lwjgl:lwjgl-openal"
        implementation "org.lwjgl:lwjgl-opengl"
        implementation "org.lwjgl:lwjgl-par"
        implementation "org.lwjgl:lwjgl-stb"
        implementation "org.lwjgl:lwjgl-vulkan"
        runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-bgfx::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-nanovg::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-nuklear::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-par::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
        if (lwjglNatives == "natives-macos") runtimeOnly "org.lwjgl:lwjgl-vulkan::$lwjglNatives"

        implementation "org.joml:joml:${jomlVersion}"
        implementation 'com.formdev:flatlaf:0.39'
    }

}
