buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
        google()
    }
    dependencies {}
}

allprojects {
    apply plugin: "idea"

    version = '0.0.1'
    ext {
        lwjglVersion = "3.2.3"
        jomlVersion = "1.9.20"

        switch (org.gradle.internal.os.OperatingSystem.current()) {
            case org.gradle.internal.os.OperatingSystem.LINUX:
                def osArch = System.getProperty("os.arch")
                lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
                        ? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
                        : "natives-linux"
                break
            case org.gradle.internal.os.OperatingSystem.MAC_OS:
                lwjglNatives = "natives-macos"
                break
            case org.gradle.internal.os.OperatingSystem.WINDOWS:
                lwjglNatives = System.getProperty("os.arch").contains("64") ? "natives-windows" : "natives-windows-x86"
                break
        }
    }

    tasks.withType(JavaCompile) {
        options.warnings = false
        options.deprecation = false
        options.compilerArgs += ["-Xlint"]
        options.compilerArgs += ["-Xdoclint:none", "-Xlint:none", "-nowarn"]
        options.compilerArgs += ["--enable-preview"]
    }

    tasks.withType(JavaExec) {
        jvmArgs += ["--enable-preview", "-XX:+UseZGC"]
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }

}

ext.libraries = [
        lwjgl: [
                "org.lwjgl:lwjgl",
                "org.lwjgl:lwjgl-glfw",
                "org.lwjgl:lwjgl-jawt",
                "org.lwjgl:lwjgl-openal",
                "org.lwjgl:lwjgl-opengl",
        ],
        lwjglRuntime: [
                "org.lwjgl:lwjgl::$lwjglNatives",
                "org.lwjgl:lwjgl-glfw::$lwjglNatives",
                "org.lwjgl:lwjgl-openal::$lwjglNatives",
                "org.lwjgl:lwjgl-opengl::$lwjglNatives",
        ]
]

project(":core") {
    apply plugin: "java"

    dependencies {
        implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
        implementation libraries.lwjgl
        runtimeOnly libraries.lwjglRuntime

        implementation "org.joml:joml:${jomlVersion}"

        implementation group: 'com.github.kerner1000', name: 'javapng', version: '2.1.2'
        implementation group: 'org.l33tlabs.twl', name: 'pngdecoder', version: '1.0'
        implementation group: 'com.esotericsoftware', name: 'kryonet', version: '2.22.0-RC1'
    }

}

project(":engine") {
    apply plugin: "java"

    dependencies {
        implementation project(":core")

        implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
        implementation libraries.lwjgl
        runtimeOnly libraries.lwjglRuntime

        implementation "org.joml:joml:${jomlVersion}"
    }

}

project(":editor") {
    apply plugin: "java"

    dependencies {
        implementation project(":core")

        implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
        implementation libraries.lwjgl
        runtimeOnly libraries.lwjglRuntime

        implementation "org.joml:joml:${jomlVersion}"

        implementation 'com.formdev:flatlaf:0.39'
    }

}

project(":noise") {
    apply plugin: "java"

    dependencies {
        implementation 'com.formdev:flatlaf:0.39'
    }

}
