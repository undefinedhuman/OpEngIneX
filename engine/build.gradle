apply plugin: 'java'

sourceCompatibility = JavaVersion.VERSION_15
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
sourceSets.main.java.srcDirs = ["src/"]

project.ext.mainClassName = "de.undefinedhuman.engine.Main"
project.ext.assetsDir = new File("../assets/")

tasks.withType(JavaCompile) {
    options.warnings = false
    options.deprecation = false
    options.compilerArgs += ["-Xlint"]
    options.compilerArgs += ["-Xdoclint:none", "-Xlint:none", "-nowarn"]
    options.compilerArgs += ["--enable-preview"]
}

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    jvmArgs = ["--enable-preview", "-Djava.awt.headless=true", "-XX:+UseZGC"]
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    setIgnoreExitValue(true)
}

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    setIgnoreExitValue(true)
    debug = true
}

task dist(type: Jar) {
    from files(sourceSets.main.output.classesDirs)
    from files(sourceSets.main.output.resourcesDir)
    from { configurations.compile.collect { zipTree(it) } }
    from files(project.assetsDir)

    manifest {
        attributes 'Main-Class': project.mainClassName
    }
}

dist.dependsOn classes
